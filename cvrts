#!/usr/bin/env bash

hex_to_rgb() {
    # Each part of the color in [0-255]
    R=$(( 16#${1:1:2} ))
    G=$(( 16#${1:3:2} ))
    B=$(( 16#${1:5:2} ))
}

rgb_to_hex() {
    hex=$(printf "#%02X%02X%02X" "$R" "$G" "$B")
    echo "${hex,,}"
}

hex_to_hsv() {
    hex_to_rgb "$1"

    max=`([[ $R -gt $B ]] && ([[ $R -gt $G ]] && echo "$R")) || ([[ $G -gt $B ]] && echo "$G") || echo "$B"`
    min=`([[ $R -lt $B ]] && ([[ $R -lt $G ]] && echo "$R")) || ([[ $G -lt $B ]] && echo "$G") || echo "$B"`

    R=$(( ( R * 100 ) / 255 ))
    G=$(( ( G * 100 ) / 255 ))
    B=$(( ( B * 100 ) / 255 ))

    max=$(( ( max * 100 ) / 255 ))
    min=$(( ( min * 100 ) / 255 ))

    delta=$(( max - min ))

    V=$max

    if [[ $delta == 0 ]]
    then
        H=0
        S=0
    else
        [[ $max == 0 ]] && max=1
        S=$(( ( delta * 100 ) / max ))

        if [[ $R == "$max" ]]
        then
            H=$(( ( ( G - B ) * 100 ) / delta ))
        elif [[ $G == "$max" ]]
        then
            H=$(( 200 + ( ( ( B - R ) * 100 ) / delta ) ))
        else
            H=$(( 400 + ( ( ( R - G ) * 100 ) / delta ) ))
        fi

        H=$(( ( H * 60 ) / 100 ))
        [[ $H -lt 0 ]] && (( H += 360 ))
    fi
}

hsv_to_hex() {
    if [[ $S == 0 ]]
    then
        V=$(( ( V * 255 ) / 100 ))
        R=$V
        G=$V
        B=$V
    else
        C=$(( ( V * S ) / 100 ))
        
        H=$(( ( H * 100 ) / 60 ))
        
        value=$(( ( H % 200 ) - 100 ))
        # Absolute value
        value=${value#-}
        
        X=$(( ( C * ( 100 - value ) ) / 100 ))
        
        m=$(( V - C ))
        
        (( H /= 100 ))
        case "$H" in
        0)
            R=$C
            G=$X
            B=0
        ;;  
        1)  
            R=$X
            G=$C
            B=0
        ;;  
        2)  
            R=0
            G=$C
            B=$X
        ;;  
        3)  
            R=0
            G=$X
            B=$C
        ;;  
        4)  
            R=$X
            G=0
            B=$C
        ;;  
        5)  
            R=$C
            G=0
            B=$X
        ;;  
        esac
        
        R=$(( ( ( R + m ) * 255 ) / 100 ))
        G=$(( ( ( G + m ) * 255 ) / 100 ))
        B=$(( ( ( B + m ) * 255 ) / 100 ))
    fi  
    
    rgb_to_hex
}
